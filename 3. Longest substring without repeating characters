'''
Given a string, find the length of the longest substring without repeating characters.

Example 1:

Input: "abcabcbb"
Output: 3 
Explanation: The answer is "abc", with the length of 3. 
Example 2:

Input: "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3. 
             Note that the answer must be a substring, "pwke" is a subsequence and not a substring.
'''
class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        seen = {}
        start,end = 0,0
        ans = 0
        while end < len(s):
            current = s[end]
            if current in seen and seen[current] >= start:
                start = seen[current] + 1
            seen[current] = end
            ans = max(ans,end-start+1)
            end+=1
        return ans
